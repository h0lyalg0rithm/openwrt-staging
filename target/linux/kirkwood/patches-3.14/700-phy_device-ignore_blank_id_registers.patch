Index: linux-3.14.10/drivers/net/phy/phy_device.c
===================================================================
--- linux-3.14.10.orig/drivers/net/phy/phy_device.c
+++ linux-3.14.10/drivers/net/phy/phy_device.c
@@ -333,7 +333,8 @@ struct phy_device *get_phy_device(struct
 
 	/* If the phy_id is mostly Fs, there is no device there */
 	if ((phy_id & 0x1fffffff) == 0x1fffffff)
-		return NULL;
+		pr_info("get_phy_device: phy_id mostly f's, but ignoring\n");
+		/* return NULL; */
 
 	return phy_device_create(bus, addr, phy_id, is_c45, &c45_ids);
 }
@@ -353,11 +354,16 @@ int phy_device_register(struct phy_devic
 	phydev->bus->phy_map[phydev->addr] = phydev;
 
 	/* Run all of the fixups for this PHY */
+#if 0
 	err = phy_init_hw(phydev);
 	if (err) {
 		pr_err("PHY %d failed to initialize\n", phydev->addr);
 		goto out;
 	}
+#else
+	/* revert to 3.10's behavior since reset fails on our fake PHY */
+	phy_scan_fixups(phydev);
+#endif
 
 	err = device_add(&phydev->dev);
 	if (err) {
